{"version":3,"sources":["components/todo-header/todo-header.js","components/searchPanel/searchPanel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/add-item/add-item.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","OnSearchChange","e","target","value","_this","setState","props","onSearchChange","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_todo_list_item","assign","ItemStatusFilter","buttons","name","_this$props","filter","onFilterChange","clazz","concat","AddItem","onLabelChange","onSubmit","preventDefault","addNewItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","text","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","todo_header_todo_header","searchPanel_SearchPanel","item_status_filter_ItemStatusFilter","todo_list_todo_list","add_item_AddItem","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.68946281.chunk.js","sourcesContent":["import React from 'react';\r\nimport './todo-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n\r\n","import React, {Component} from 'react';\r\nimport './searchPanel.css'\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    OnSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input type=\"text\"\r\n            className=\"form-control search-input\"\r\n            placeholder=\"type to search\"\r\n            value={this.state.term}\r\n            onChange={this.OnSearchChange} />\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem =  ({ label, onDeleted, onToggleImportant, onToggleDone, important, done }) => {\r\n    \r\n\r\n    let classNames = \"todo-list-item\";\r\n    \r\n    if(done){\r\n      classNames += \" done\" \r\n    }\r\n    if(important){\r\n      classNames += \" important\" \r\n    }\r\n\r\n  return (\r\n      <span className={classNames}>\r\n      <span \r\n        onClick = {onToggleDone }\r\n        className=\"todo-list-item-label\">\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick = { onToggleImportant }>\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick = { onDeleted }>\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>\r\n    </span>\r\n  );\r\n  }\r\n\r\n  export default TodoListItem;","import React from 'react';\r\nimport TodoListItem from './../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\n\r\n\r\nconst TodoList = ( {todos, onDeleted, onToggleImportant, onToggleDone} ) => {\r\n    \r\n    const elements = todos.map((item) => {\r\n\r\n        const {id, ...itemProps} = item; \r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                 {...itemProps}\r\n                 onDeleted = {() => onDeleted(id)}\r\n                 onToggleDone = {() => onToggleDone(id)}\r\n                 onToggleImportant = {() => onToggleImportant(id) }  />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React, {Component} from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n        buttons = [\r\n                {name: 'all', label: 'All'},\r\n                {name: 'active', label: 'Active'},\r\n                {name: 'done', label: 'Done'}\r\n        ];\r\n\r\n       render() {\r\n\r\n        const {filter, onFilterChange} = this.props\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n                const isActive = filter === name;\r\n                const clazz = isActive ? 'btn-info': 'btn-outline-secondary'               \r\n                return (\r\n                        <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                        {label}\r\n                        </button> \r\n                );\r\n        });\r\n        return ( \r\n                <div className=\"btn-group\">\r\n                        {buttons}\r\n                </div>\r\n        );\r\n       } \r\n}\r\n ","import React, {Component} from 'react';\r\nimport './add-item.css';\r\n\r\nexport default class AddItem extends Component {\r\n\r\n    state = {\r\n        label: ' '\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addNewItem(this.state.label);\r\n        this.setState({\r\n            label:''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}  >\r\n                <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 onChange={this.onLabelChange}\r\n                 placeholder=\"What's need to be done\"\r\n                 value={this.state.label}\r\n                 ></input>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                        Add</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport AppHeader from './components/todo-header/todo-header';\nimport SearchPanel from './components/searchPanel/searchPanel';\nimport TodoList from './components/todo-list/todo-list.js';\nimport ItemStatusFilter from './components/item-status-filter/item-status-filter';\nimport AddItem from './components/add-item/add-item';\n\nimport './index.css';\n\nexport default class App extends Component {\n\n  maxId = 100;\n        \nstate = { \n      todoData : [\n        this.createTodoItem('Drink Coffee'),\n        this.createTodoItem('Make breakfast'),\n        this.createTodoItem('Eat dinner')\n    ],\n\n    term: ' ',\n\n    filter: 'all'\n\n  };\n\n  createTodoItem (label){\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [\n        ...todoData.slice( 0, idx), ...todoData.slice( idx + 1)\n      ];\n      return {\n        todoData: newArray\n      };\n    })\n  };\n\n  addNewItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({todoData}) => {\n      const newArr = [\n        ...todoData,\n        newItem\n      ];\n      return {\n        todoData: newArr \n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n      const idx = arr.findIndex((el) => el.id === id);\n\n      const oldItem = arr[idx];\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\n      \n      return [\n          ...arr.slice( 0, idx),\n          newItem,\n          ...arr.slice( idx + 1)\n        ]\n}\n\n  onToggleImportant = (id) => {\n    this.setState(({todoData}) => {\n      return{\n        todoData: this.toggleProperty(todoData, id,'important')\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({todoData}) => {\n      return{\n        todoData: this.toggleProperty(todoData, id,'done')\n      };\n    });\n  };\n\n  search(items, term) {\n    if(term.length === 0){\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  onSearchChange = (term) => {\n    this.setState({ term });\n  };\n\n  filter(items, filter) {\n    switch(filter){\n       case 'all': \n          return items;\n       case 'active': \n          return items.filter((item) => !item.done);\n       case 'done': \n          return items.filter((item) => item.done);\n       default: \n          return items;\n    }\n  }\n\n  onFilterChange = (filter) =>{\n    this.setState({ filter });\n  }\n\n  render() {\n\n    const {todoData, term, filter} = this.state;\n\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n\n    const doneCount = todoData.filter((el) => el.done).length;\n\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n      <AppHeader toDo={todoCount} done={doneCount} />\n      <div className=\"top-panel d-flex\">\n        <SearchPanel onSearchChange={this.onSearchChange} />\n        <ItemStatusFilter filter={filter}\n        onFilterChange = {this.onFilterChange} />\n      </div>\n\n      <TodoList \n      todos={visibleItems}\n      onDeleted={this.deleteItem} \n      onToggleImportant = {this.onToggleImportant}\n      onToggleDone = { this.onToggleDone} />\n      <AddItem\n      addNewItem = {this.addNewItem} />\n    </div>\n  );\n  };\n\n};\n\n \nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}